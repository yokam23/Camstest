<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="0" hostname="CSS-D-196" name="com.concerto.vegaah.test.scenarios.VegaahReports.ResellerReport" tests="1" failures="1" timestamp="26 Apr 2020 10:07:01 GMT" time="40.893" errors="0">
  <testcase name="TransactionReports" time="40.893" classname="com.concerto.vegaah.test.scenarios.VegaahReports.ResellerReport">
    <failure type="java.lang.AssertionError" message="java.lang.AssertionError: Correct TDSFees Is Displayed expected [0.05] but found [0.0480]java.lang.AssertionError: Correct GSTFEES Is Displayed expected [true] but found [false]java.lang.AssertionError: Correct TDSFees Is Displayed expected [0.00] but found [0.0480]java.lang.AssertionError: Correct Reseller_fees Is Displayed expected [true] but found [false]java.lang.AssertionError: Correct Reseller_Payout Is Displayed expected [true] but found [false]java.lang.AssertionError: Correct Reseller_Id Is Displayed expected [BrResRT03] but found [Br031246]java.lang.AssertionError: Correct GSTFEES Is Displayed expected [true] but found [false]java.lang.AssertionError: Correct TDSFees Is Displayed expected [0.05] but found [0.0030]java.lang.AssertionError: Correct Reseller_fees Is Displayed expected [true] but found [false]java.lang.AssertionError: Correct Reseller_Payout Is Displayed expected [true] but found [false]java.lang.AssertionError: Correct Reseller_Id Is Displayed expected [Br031246] but found [BrResRT03]java.lang.AssertionError: Correct TDSFees Is Displayed expected [0.00] but found [0.0030]">
      <![CDATA[java.lang.AssertionError: java.lang.AssertionError: Correct TDSFees Is Displayed expected [0.05] but found [0.0480]java.lang.AssertionError: Correct GSTFEES Is Displayed expected [true] but found [false]java.lang.AssertionError: Correct TDSFees Is Displayed expected [0.00] but found [0.0480]java.lang.AssertionError: Correct Reseller_fees Is Displayed expected [true] but found [false]java.lang.AssertionError: Correct Reseller_Payout Is Displayed expected [true] but found [false]java.lang.AssertionError: Correct Reseller_Id Is Displayed expected [BrResRT03] but found [Br031246]java.lang.AssertionError: Correct GSTFEES Is Displayed expected [true] but found [false]java.lang.AssertionError: Correct TDSFees Is Displayed expected [0.05] but found [0.0030]java.lang.AssertionError: Correct Reseller_fees Is Displayed expected [true] but found [false]java.lang.AssertionError: Correct Reseller_Payout Is Displayed expected [true] but found [false]java.lang.AssertionError: Correct Reseller_Id Is Displayed expected [Br031246] but found [BrResRT03]java.lang.AssertionError: Correct TDSFees Is Displayed expected [0.00] but found [0.0030]
at org.testng.Assert.fail(Assert.java:96)
at com.concerto.common.utilities.Asserts.AssertAll(Asserts.java:188)
at com.concerto.vegaah.test.scenarios.VegaahReports.ResellerReport.TransactionReports(ResellerReport.java:82)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
at java.lang.Thread.run(Unknown Source)
]]>
    </failure>
  </testcase> <!-- TransactionReports -->
</testsuite> <!-- com.concerto.vegaah.test.scenarios.VegaahReports.ResellerReport -->
